<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="4" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-18T17:27:17 IST" name="Suite" finished-at="2023-03-18T17:27:34 IST" duration-ms="16354">
    <groups>
    </groups>
    <test started-at="2023-03-18T17:27:17 IST" name="Test" finished-at="2023-03-18T17:27:34 IST" duration-ms="16354">
      <class name="testPackage.LoginTestclass">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testPackage.LoginTestclass@4b0d79fc]" started-at="2023-03-18T17:27:27 IST" name="beforeMethod" finished-at="2023-03-18T17:27:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyLoginFunctionalityWithIncorrectData()[pri:0, instance:testPackage.LoginTestclass@4b0d79fc]" started-at="2023-03-18T17:27:27 IST" name="VerifyLoginFunctionalityWithIncorrectData" finished-at="2023-03-18T17:27:29 IST" duration-ms="2577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginFunctionalityWithIncorrectData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testPackage.LoginTestclass@4b0d79fc]" started-at="2023-03-18T17:27:29 IST" name="afterMethod" finished-at="2023-03-18T17:27:30 IST" duration-ms="547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginFunctionalityWithIncorrectData status=SUCCESS method=LoginTestclass.VerifyLoginFunctionalityWithIncorrectData()[pri:0, instance:testPackage.LoginTestclass@4b0d79fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testPackage.LoginTestclass@4b0d79fc]" started-at="2023-03-18T17:27:30 IST" name="beforeMethod" finished-at="2023-03-18T17:27:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginFunctionalityWithCorrectData()[pri:1, instance:testPackage.LoginTestclass@4b0d79fc]" started-at="2023-03-18T17:27:30 IST" name="verifyLoginFunctionalityWithCorrectData" finished-at="2023-03-18T17:27:33 IST" duration-ms="3232" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index] but found [https://opensource-demo.orangehrmlive.com/web/index.php/auth/login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index] but found [https://opensource-demo.orangehrmlive.com/web/index.php/auth/login]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testPackage.LoginTestclass.verifyLoginFunctionalityWithCorrectData(LoginTestclass.java:38)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFunctionalityWithCorrectData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testPackage.LoginTestclass@4b0d79fc]" started-at="2023-03-18T17:27:33 IST" name="afterMethod" finished-at="2023-03-18T17:27:33 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFunctionalityWithCorrectData status=FAILURE method=LoginTestclass.verifyLoginFunctionalityWithCorrectData()[pri:1, instance:testPackage.LoginTestclass@4b0d79fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testPackage.LoginTestclass -->
      <class name="testPackage.BaseClass">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:testPackage.BaseClass@6253c26]" started-at="2023-03-18T17:27:17 IST" name="beforeTest" finished-at="2023-03-18T17:27:27 IST" duration-ms="9299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testPackage.BaseClass@6253c26]" started-at="2023-03-18T17:27:33 IST" name="aftertest" finished-at="2023-03-18T17:27:34 IST" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- testPackage.BaseClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
